1
00:00:02,260 --> 00:00:08,170
Entonces, incluso se vuelve verdadero o falso dependiendo de lo que el usuario elija en el dilogo si es verdad.

2
00:00:08,170 --> 00:00:12,910
Entonces, si quiere terminar, deberamos volver a la pgina anterior.

3
00:00:12,910 --> 00:00:20,490
Entonces, de alguna manera, queremos emitir un evento muerto; ya no estamos en un ejercicio continuo.

4
00:00:20,860 --> 00:00:22,270
Si es falso

5
00:00:22,270 --> 00:00:26,390
Entonces, si el usuario no confirm su salida, entonces queremos recibirlos.

6
00:00:26,410 --> 00:00:29,410
El temporizador ahora para lograr eso.

7
00:00:29,420 --> 00:00:37,820
Comencemos con el caso de salida por muerto o importamos el emisor del evento y la salida desde un ngulo

8
00:00:38,510 --> 00:00:41,620
de ncleo y creamos mi nueva propiedad aqu.

9
00:00:41,960 --> 00:00:53,960
Tal vez en la parte superior para que podamos verlo rpidamente decorado con una salida que est entrenando en el entrenamiento

10
00:00:54,440 --> 00:00:59,870
de wups, salga del nuevo motor de eventos como dat.

11
00:01:02,720 --> 00:01:07,130
Ahora quiero retenerlo aqu abajo.

12
00:01:07,130 --> 00:01:11,540
El resultado es verdadero porque es verdadero si el usuario confirma que sale.

13
00:01:11,630 --> 00:01:20,260
Entonces, si para el asalto quiero llamar a esta salida de entrenamiento emet as como hicimos este evento.

14
00:01:20,510 --> 00:01:26,840
Y ahora, en el componente de capacitacin donde usamos el entrenamiento actual, puedo escuchar un extracto

15
00:01:27,290 --> 00:01:35,190
de entrenamiento y establecer un entrenamiento continuo igual a fuerza si ocurre porque el usuario se da por vencido.

16
00:01:35,510 --> 00:01:36,500
Probemos eso.

17
00:01:36,680 --> 00:01:38,230
Comencemos el entrenamiento.

18
00:01:39,350 --> 00:01:41,580
Y detenerlo y confirmarlo.

19
00:01:41,920 --> 00:01:43,430
Y estamos de regreso

20
00:01:43,430 --> 00:01:49,630
Comencemos y pare y no confirmemos y nos mantenemos alerta para reanudar el temporizador.

21
00:01:49,650 --> 00:01:52,830
As que ahora para reanudar el temporizador.

22
00:01:52,900 --> 00:01:55,480
Por supuesto, todos necesitamos implementar algn cdigo.

23
00:01:55,520 --> 00:02:05,490
Lo bueno es una cosa que podemos hacer, simplemente podemos agregar un mtodo, tal vez los nombres de inicio o reanudar el cronmetro y poner

24
00:02:05,520 --> 00:02:08,420
nuestro cdigo de temporizador en este mtodo.

25
00:02:09,600 --> 00:02:13,040
Ahora llamar este mtodo directamente en l.

26
00:02:13,080 --> 00:02:15,800
Entonces este temporizador de inicio o reasumido.

27
00:02:16,080 --> 00:02:18,850
Y tambin lo llamo all.

28
00:02:18,870 --> 00:02:22,540
Si resoled no es cierto, continuamos.

29
00:02:22,710 --> 00:02:27,200
Y como siempre comenzamos a progresar, podemos continuar as.

30
00:02:27,750 --> 00:02:37,200
Entonces, si comenzamos un nuevo entrenamiento y nos detenemos, pero luego decidimos no abandonarlo, retroceder

31
00:02:37,200 --> 00:02:38,460
y continuar.

32
00:02:38,460 --> 00:02:39,840
Sin embargo, renunciamos.

33
00:02:40,020 --> 00:02:41,010
Bueno, entonces hemos terminado.

34
00:02:41,010 --> 00:02:49,650
Ragon Entonces con eso agregamos nuestro dilogo y podemos controlar nuestro entrenamiento continuo.

35
00:02:49,670 --> 00:02:51,940
Todava no estamos pasando datos.

36
00:02:51,950 --> 00:02:55,550
Obviamente funciona sin que seleccionemos nada y ese men desplegable.

37
00:02:55,670 --> 00:02:57,970
Estas son todas las cosas en las que trabajaremos.

38
00:02:58,220 --> 00:03:01,360
Pero por ahora realmente me gust el progreso que hicimos.

39
00:03:01,550 --> 00:03:04,900
Ahora veamos qu ms podemos hacer en las prximas conferencias.

